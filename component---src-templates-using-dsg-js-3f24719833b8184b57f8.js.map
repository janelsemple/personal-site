{"version":3,"file":"component---src-templates-using-dsg-js-3f24719833b8184b57f8.js","mappings":"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","sources":["webpack://Janel Semple Personal Site/./src/hooks/useHeader.js","webpack://Janel Semple Personal Site/./src/components/Header/header.js","webpack://Janel Semple Personal Site/./src/components/Header/header.module.css","webpack://Janel Semple Personal Site/./src/components/Layout/layout.js","webpack://Janel Semple Personal Site/./src/components/Navigation/navigation.module.css","webpack://Janel Semple Personal Site/./src/hooks/useNavBar.js","webpack://Janel Semple Personal Site/./src/components/Navigation/navigation.js","webpack://Janel Semple Personal Site/./src/components/seo/seo.js","webpack://Janel Semple Personal Site/./src/contexts/ScrollContext.js","webpack://Janel Semple Personal Site/./src/templates/using-dsg.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useScrollVisibility = (scrollRef) => {\r\n  // Determine initial visibility based on window width\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  useEffect(() => {\r\n    setIsVisible(window.innerWidth <= 1025)\r\n    const handleScroll = () => {\r\n      // Ensure the ref is current and the scroll event is applicable\r\n      if (scrollRef.current) {\r\n        let currentScroll = scrollRef.current.scrollTop;\r\n\r\n        // Header is visible if screen width is <= 1025px and it's not scrolled all the way to the top\r\n        const shouldBeVisible = window.innerWidth <= 1025 && currentScroll > 0;\r\n\r\n        setIsVisible(shouldBeVisible);\r\n      }\r\n    };\r\n\r\n    const handleResize = () => {\r\n      // Adjust visibility based on window width during resize\r\n      const shouldBeVisible = window.innerWidth <= 1025 && (scrollRef.current?.scrollTop > 0);\r\n      setIsVisible(shouldBeVisible);\r\n    };\r\n\r\n    // Attach the scroll and resize event listeners\r\n    const scrollElement = scrollRef.current;\r\n    if (scrollElement) {\r\n      scrollElement.addEventListener(\"scroll\", handleScroll);\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // Clean up the event listeners\r\n    return () => {\r\n      if (scrollElement) {\r\n        scrollElement.removeEventListener(\"scroll\", handleScroll);\r\n      }\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, [scrollRef]);\r\n\r\n  return isVisible;\r\n};\r\n\r\nexport default useScrollVisibility;\r\n","// Header.js\r\nimport React from \"react\";\r\nimport { inner, header, headerVisible } from \"./header.module.css\";\r\nimport NavBar from \"../Navigation/navigation\";\r\nimport useScrollVisibility from \"../../hooks/useHeader\";\r\n\r\nconst Header = ({ scrollContainerRef }) => {\r\n  const showHeader = useScrollVisibility(scrollContainerRef);\r\n\r\n  return (\r\n    <>\r\n      <header className={`${header} ${showHeader ? headerVisible : ''}`}>\r\n        <div className={inner}>\r\n          <div>\r\n            JS\r\n          </div>\r\n          <div>\r\n            <NavBar />\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport var header = \"header-module--header--a840d\";\nexport var headerVisible = \"header-module--header-visible--adf61\";\nexport var initials = \"header-module--initials--33944\";\nexport var inner = \"header-module--inner--e6eff\";","import React, { useRef } from \"react\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nimport Header from \"../Header/header\";\r\nimport \"./layout.css\";\r\nimport { ScrollProvider } from \"../../contexts/ScrollContext\";\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleAndBackgroundQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n      backgroundImage: file(relativePath: { eq: \"gradient-background.jpg\" }) {\r\n        publicURL\r\n      }\r\n    }\r\n  `);\r\n\r\n  const mainDivRef = useRef(null);\r\n\r\n  // Example usage of backgroundImage's publicURL in an inline style for background\r\n  const mainDivStyle = {\r\n    backgroundImage: `url(${data.backgroundImage.publicURL})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n  };\r\n\r\n  return (\r\n    <ScrollProvider>\r\n      <div style={mainDivStyle}>\r\n        <div ref={mainDivRef} className={'mainDiv'} >\r\n          <Header siteTitle={data.site.siteMetadata?.title || `Title`} scrollContainerRef={mainDivRef} />\r\n          <div className={'innerDiv'}>\r\n            <main>{children}</main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ScrollProvider>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","// extracted by mini-css-extract-plugin\nexport var navBar = \"navigation-module--navBar--abbbc\";\nexport var navLink = \"navigation-module--navLink--84960\";\nexport var navLinkActive = \"navigation-module--navLinkActive--3bd8d\";","import { useState, useEffect } from 'react';\r\n\r\nconst useScrollSpy = (elements, options) => {\r\n  const [activeId, setActiveId] = useState('');\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n          setActiveId(entry.target.id);\r\n        }\r\n      });\r\n    }, options);\r\n\r\n    elements.forEach(id => {\r\n      const el = document.getElementById(id);\r\n      if (el) observer.observe(el);\r\n    });\r\n\r\n    return () => observer.disconnect();\r\n  }, [elements, options]);\r\n\r\n  return activeId;\r\n};\r\n\r\nexport default useScrollSpy;","import React, { useContext } from 'react';\r\nimport { ScrollContext } from '../../contexts/ScrollContext';\r\nimport * as styles from './navigation.module.css';\r\nimport useScrollSpy from \"../../hooks/useNavBar\";\r\n\r\nconst Navbar = () => {\r\n  const { about, experience, projects, scrollToRef } = useContext(ScrollContext);\r\n  const activeId = useScrollSpy(['about', 'experience', 'projects'], { threshold: 0.40 });\r\n\r\n  return (\r\n    <div className={styles.navBar}>\r\n      <span\r\n        className={activeId === 'about' ? styles.navLinkActive : styles.navLink}\r\n        onClick={() => scrollToRef(about)}\r\n      >\r\n        About\r\n      </span>\r\n      &middot;\r\n      <span\r\n        className={activeId === 'experience' ? styles.navLinkActive : styles.navLink}\r\n        onClick={() => scrollToRef(experience)}\r\n      >\r\n        Experience\r\n      </span>\r\n      &middot;\r\n      <span\r\n        className={activeId === 'projects' ? styles.navLinkActive : styles.navLink}\r\n        onClick={() => scrollToRef(projects)}\r\n      >\r\n        Projects\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import React, { createContext, useRef, useState} from 'react';\r\n\r\nexport const ScrollContext = createContext(undefined);\r\n\r\nexport const ScrollProvider = ({ children }) => {\r\n  const about = useRef(null);\r\n  const experience = useRef(null);\r\n  const projects = useRef(null);\r\n  const [currentView, setCurrentView] = useState('');\r\n\r\n  const scrollToRef = (ref) => {\r\n    ref.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n\r\n  return (\r\n    <ScrollContext.Provider value={{ about, experience, projects, scrollToRef, currentView }}>\r\n      {children}\r\n    </ScrollContext.Provider>\r\n  );\r\n};\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/Layout/layout\"\r\nimport Seo from \"../components/seo/seo\"\r\n\r\nconst UsingDSG = () => (\r\n  <Layout>\r\n    <h1>\r\n      Hello from a <b>DSG Page</b>\r\n    </h1>\r\n    <p>This page is not created until requested by a user.</p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/deferred-static-generation/\">\r\n        documentation about Deferred Static Generation\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head = () => <Seo title=\"Using DSG\" />\r\n\r\nexport default UsingDSG\r\n"],"names":["scrollRef","isVisible","setIsVisible","useState","useEffect","window","innerWidth","handleScroll","current","currentScroll","scrollTop","shouldBeVisible","handleResize","_scrollRef$current","scrollElement","addEventListener","removeEventListener","_ref","scrollContainerRef","showHeader","useScrollVisibility","React","className","header","NavBar","_data$site$siteMetada","children","data","useStaticQuery","mainDivRef","useRef","mainDivStyle","backgroundImage","publicURL","backgroundRepeat","backgroundSize","ScrollProvider","style","ref","Header","siteTitle","site","siteMetadata","title","navLink","navLinkActive","useScrollSpy","elements","options","activeId","setActiveId","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","id","el","document","getElementById","observe","disconnect","Navbar","about","experience","projects","scrollToRef","useContext","ScrollContext","threshold","styles","onClick","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author","createContext","undefined","currentView","setCurrentView","Provider","value","scrollIntoView","behavior","Head","Seo","UsingDSG","Layout","href","Link","to"],"sourceRoot":""}